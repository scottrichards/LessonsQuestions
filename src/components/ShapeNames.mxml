<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 initialize="componentInitHandler(event)"
		 horizontalAlign="center">
	<fx:Style>
		.labelStyle { 
			fontSize: 30;
			fontWeight: bold;
		}
		
		.buttonStyle { 
			fontSize: 30;
		}
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			protected const NUMBER_OF_ANSWERS:uint = 4;
			public var distractors :Array = new Array("Cube", "Cone", "Cylinder", "Rectangle", "Square", "Pentagon", "Hexagon");
			protected var selectedButtonLabel : String;
			
			protected function componentInitHandler(event:Event):void {
				var distractorList : Dictionary = new Dictionary();
				var numDisctactors : uint = 0;
				do {
					var randomInt:uint = uint(Math.random() * distractors.length);
					var newDistractor:String = distractors[randomInt];
					if (distractorList[newDistractor] == null) {
						numDisctactors++;
						distractorList[newDistractor] = newDistractor;
					}
//					distractorList.push(newDistractor);
				} while (numDisctactors < NUMBER_OF_ANSWERS - 1);
				var currentItem:uint;
				for (var key:Object in distractorList) {
					trace("key: " + key + " value: " + distractorList[key]);
					switch (currentItem) {
						case 0 : button1.label = distractorList[key];
								break;
						case 1 : button2.label = distractorList[key];
							break;
						case 2 : button3.label = distractorList[key];
							break;
					}
					currentItem++;
				}
				
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				var buttonId : String = event.currentTarget.id;
				trace("click on buttonID: " + buttonId);
				var buttonLabel : String = event.currentTarget.label;
				selectedButtonLabel = buttonLabel;
				textLabel.text = selectedButtonLabel;
			}
			
			public function getText():String
			{
				return selectedButtonLabel;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Label id="textLabel" styleName="labelStyle" paddingBottom="10"  />
	<s:HGroup gap="30" paddingTop="10">
		<s:Button id="button1" label="" click="clickHandler(event)" />
		<s:Button id="button2" label="" click="clickHandler(event)" />
	</s:HGroup>
	<s:HGroup gap="30" paddingTop="10">
		<s:Button id="button3" label="" click="clickHandler(event)" />
		<s:Button id="button4" label="" click="clickHandler(event)" />
	</s:HGroup>
</s:VGroup>
