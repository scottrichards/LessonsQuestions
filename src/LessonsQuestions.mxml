<?xml version="1.0" encoding="utf-8"?>
<s:ViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
							xmlns:s="library://ns.adobe.com/flex/spark" 
							firstView="views.LessonsQuestionsHomeView" 
							firstViewData="{lessonsList}"
							initialize="initializeHandler(event)"
							splashScreenImage="views.SplashScreen"
							applicationDPI="160"
							>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import components.BIPTitleWindow;
			
			import events.CloseTitleWindow;
			
			import model.PreferenceSettings;
			
			import views.Preferences;
			
			[Bindable]
			public var lessonsXML:XML;
			
			[Bindable]
			public var lessonsList:ArrayList;
			
			[Bindable]
			public var _preferences:PreferenceSettings;
			
			public var prefsSharedObject : SharedObject;
			
			protected function initializeHandler(event:FlexEvent):void
			{
				// Map "model.Preferences" to the PreferenceSettings class
				registerClassAlias( "model.PrefenceSettings", PreferenceSettings);

				// Create a shared object and store Preferences in it
				prefsSharedObject = SharedObject.getLocal( "PreferenceSettings" );
				var example:SharedObject = SharedObject.getLocal("example");					
				if (prefsSharedObject.data.preferences == undefined) {
					trace ("first time, saving preferences instace");
					prefsSharedObject.data.preferences = new PreferenceSettings();
					_preferences = prefsSharedObject.data.preferences;
				} else {	// we loaded them from disk
					_preferences = prefsSharedObject.data.preferences;
				}
				reloadData();
			}
			
			protected function lessonService_resultHandler(event:ResultEvent):void
			{
				//			myData = event.result.Root.page;
				lessonsXML = event.result as XML;
				traversePages(lessonsXML);
				CursorManager.removeBusyCursor();
			}
			
			protected  function traversePages(lessonsXML:XML):void { 
				lessonsList = new ArrayList();
				var i:Number = 0;
				for each (var lesson:XML in lessonsXML.lesson) 
				{ 			
					if (lesson.lessonName) {
						var lessonObject:Object = new Object();
						lessonObject.data = i++;
						lessonObject.label = String(lesson.lessonName);
						lessonsList.addItem(lessonObject);
					}
				} 
			}
			
			public function reloadData():void {
				lessonsService.url = _preferences.lessonsURL + "/lessons.xml";
				lessonsService.send();
			}
			
			protected function handleFault(event:FaultEvent):void
			{
				var errorMessage : String = "Error could not load url: " + lessonsService.url; 
				trace(errorMessage);
				
//				titleWindow = PopUpManager.createPopUp(this, BIPTitleWindow, true) as BIPTitleWindow;
//				//				titleWindow.addEventListener(CloseEvent.CLOSE,closeTitleWindowHandler);
//				titleWindow.addEventListener(CloseTitleWindow.EVENT_NAME, closeTitleWindowHandler);
//				titleWindow.title = "Error";
//				titleWindow.setMessage(message);
//				PopUpManager.centerPopUp(titleWindow);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="lessonsService"
					   resultFormat="e4x"
					   showBusyCursor="true"
					   result="lessonService_resultHandler(event)"
					   fault="handleFault(event)"
					   />
	</fx:Declarations>
	

</s:ViewNavigatorApplication>
